/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AgentPoolBasics {
    /// AvailabilityZones - The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
    #[serde(rename = "availabilityZones", skip_serializing_if = "Option::is_none")]
    pub availability_zones: Option<Vec<String>>,
    /// Required: Count - Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    /// EnableAutoScaling - Whether to enable auto-scaler
    #[serde(rename = "enableAutoScaling", skip_serializing_if = "Option::is_none")]
    pub enable_auto_scaling: Option<bool>,
    /// Mode - Possible values include: 'System', 'User'.
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<String>,
    /// OrchestratorVersion - As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
    #[serde(rename = "orchestratorVersion", skip_serializing_if = "Option::is_none")]
    pub orchestrator_version: Option<String>,
    /// The OSDiskSize for Agent agentpool cannot be less than 30GB or larger than 2048GB.
    #[serde(rename = "osDiskSizeGB", skip_serializing_if = "Option::is_none")]
    pub os_disk_size_gb: Option<i32>,
    #[serde(rename = "scalingConfig", skip_serializing_if = "Option::is_none")]
    pub scaling_config: Option<Box<crate::models::AksNodegroupScalingConfig>>,
    /// Required: VMSize - VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
    #[serde(rename = "vmSize", skip_serializing_if = "Option::is_none")]
    pub vm_size: Option<String>,
}

impl AgentPoolBasics {
    pub fn new() -> AgentPoolBasics {
        AgentPoolBasics {
            availability_zones: None,
            count: None,
            enable_auto_scaling: None,
            mode: None,
            orchestrator_version: None,
            os_disk_size_gb: None,
            scaling_config: None,
            vm_size: None,
        }
    }
}


