/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AwsNodeSpec : AWSNodeSpec aws specific node settings



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AwsNodeSpec {
    /// ami to use. Will be defaulted to a ami for your selected operating system and region. Only set this when you know what you do.
    #[serde(rename = "ami", skip_serializing_if = "Option::is_none")]
    pub ami: Option<String>,
    /// This flag controls a property of the AWS instance. When set the AWS instance will get a public IP address assigned during launch overriding a possible setting in the used AWS subnet.
    #[serde(rename = "assignPublicIP", skip_serializing_if = "Option::is_none")]
    pub assign_public_ip: Option<bool>,
    /// AssumeRoleARN defines the ARN for an IAM role that should be assumed when handling resources on AWS. It will be used to acquire temporary security credentials using an STS AssumeRole API operation whenever creating an AWS session.
    #[serde(rename = "assumeRoleARN", skip_serializing_if = "Option::is_none")]
    pub assume_role_arn: Option<String>,
    /// AssumeRoleExternalID is an arbitrary string that may be needed when calling the STS AssumeRole API operation. Using an external ID can help to prevent the \"confused deputy problem\".
    #[serde(rename = "assumeRoleExternalID", skip_serializing_if = "Option::is_none")]
    pub assume_role_external_id: Option<String>,
    /// Availability zone in which to place the node. It is coupled with the subnet to which the node will belong.
    #[serde(rename = "availabilityZone", skip_serializing_if = "Option::is_none")]
    pub availability_zone: Option<String>,
    /// size of the volume in gb. Only one volume will be created
    #[serde(rename = "diskSize")]
    pub disk_size: i64,
    #[serde(rename = "instanceType")]
    pub instance_type: String,
    /// IsSpotInstance indicates whether the created machine is an aws ec2 spot instance or on-demand ec2 instance.
    #[serde(rename = "isSpotInstance", skip_serializing_if = "Option::is_none")]
    pub is_spot_instance: Option<bool>,
    /// SpotInstanceInterruptionBehavior sets the interruption behavior for the spot instance when capacity is no longer available at the price you specified, if there is no capacity, or if a constraint cannot be met. Charges for EBS volume storage apply when an instance is stopped.
    #[serde(rename = "spotInstanceInterruptionBehavior", skip_serializing_if = "Option::is_none")]
    pub spot_instance_interruption_behavior: Option<String>,
    /// SpotInstanceMaxPrice is the maximum price you are willing to pay per instance hour. Your instance runs when your maximum price is greater than the Spot Price.
    #[serde(rename = "spotInstanceMaxPrice", skip_serializing_if = "Option::is_none")]
    pub spot_instance_max_price: Option<String>,
    /// SpotInstancePersistentRequest ensures that your request will be submitted every time your Spot Instance is terminated.
    #[serde(rename = "spotInstancePersistentRequest", skip_serializing_if = "Option::is_none")]
    pub spot_instance_persistent_request: Option<bool>,
    /// The VPC subnet to which the node shall be connected.
    #[serde(rename = "subnetID", skip_serializing_if = "Option::is_none")]
    pub subnet_id: Option<String>,
    /// additional instance tags
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "volumeType")]
    pub volume_type: String,
}

impl AwsNodeSpec {
    /// AWSNodeSpec aws specific node settings
    pub fn new(disk_size: i64, instance_type: String, volume_type: String) -> AwsNodeSpec {
        AwsNodeSpec {
            ami: None,
            assign_public_ip: None,
            assume_role_arn: None,
            assume_role_external_id: None,
            availability_zone: None,
            disk_size,
            instance_type,
            is_spot_instance: None,
            spot_instance_interruption_behavior: None,
            spot_instance_max_price: None,
            spot_instance_persistent_request: None,
            subnet_id: None,
            tags: None,
            volume_type,
        }
    }
}


