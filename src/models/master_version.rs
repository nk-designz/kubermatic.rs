/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MasterVersion : MasterVersion describes a version of the master components



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MasterVersion {
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<bool>,
    /// If true, then given version control plane version is not compatible with one of the kubelets inside cluster and shouldn't be used.
    #[serde(rename = "restrictedByKubeletVersion", skip_serializing_if = "Option::is_none")]
    pub restricted_by_kubelet_version: Option<bool>,
    /// Version wraps semverlib.Version. It is needed because kubebuilder does not accept structs with non-tagged fields, even if they have custom marshallers With this the CRD resource will have Version as string but operator code can work directly with the semverlib.Version struct (taken from https://github.com/kubernetes-sigs/controller-tools/blob/master/pkg/crd/testdata/cronjob_types.go#L283)
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<serde_json::Value>,
}

impl MasterVersion {
    /// MasterVersion describes a version of the master components
    pub fn new() -> MasterVersion {
        MasterVersion {
            default: None,
            restricted_by_kubelet_version: None,
            version: None,
        }
    }
}


