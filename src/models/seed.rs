/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Seed : Seed represents a seed object



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Seed {
    /// Optional: Country of the seed as ISO-3166 two-letter code, e.g. DE or UK. For informational purposes in the Kubermatic dashboard only.
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    /// Datacenters contains a map of the possible datacenters (DCs) in this seed. Each DC must have a globally unique identifier (i.e. names must be unique across all seeds).
    #[serde(rename = "datacenters", skip_serializing_if = "Option::is_none")]
    pub datacenters: Option<::std::collections::HashMap<String, crate::models::Datacenter>>,
    #[serde(rename = "etcdBackupRestore", skip_serializing_if = "Option::is_none")]
    pub etcd_backup_restore: Option<Box<crate::models::EtcdBackupRestore>>,
    /// Possible values are `NodePort`, `LoadBalancer` or `Tunneling` (requires a feature gate).
    #[serde(rename = "expose_strategy", skip_serializing_if = "Option::is_none")]
    pub expose_strategy: Option<String>,
    #[serde(rename = "kubeconfig", skip_serializing_if = "Option::is_none")]
    pub kubeconfig: Option<Box<crate::models::ObjectReference>>,
    /// Optional: Detailed location of the cluster, like \"Hamburg\" or \"Datacenter 7\". For informational purposes in the Kubermatic dashboard only.
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    #[serde(rename = "mla", skip_serializing_if = "Option::is_none")]
    pub mla: Option<Box<crate::models::SeedMlaSettings>>,
    /// Name represents human readable name for the resource
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "proxy_settings", skip_serializing_if = "Option::is_none")]
    pub proxy_settings: Option<Box<crate::models::ProxySettings>>,
    /// Optional: This can be used to override the DNS name used for this seed. By default the seed name is used.
    #[serde(rename = "seed_dns_overwrite", skip_serializing_if = "Option::is_none")]
    pub seed_dns_overwrite: Option<String>,
}

impl Seed {
    /// Seed represents a seed object
    pub fn new() -> Seed {
        Seed {
            country: None,
            datacenters: None,
            etcd_backup_restore: None,
            expose_strategy: None,
            kubeconfig: None,
            location: None,
            mla: None,
            name: None,
            proxy_settings: None,
            seed_dns_overwrite: None,
        }
    }
}


