/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GitSource {
    #[serde(rename = "credentials", skip_serializing_if = "Option::is_none")]
    pub credentials: Option<Box<crate::models::GitCredentials>>,
    /// Path of the \"source\" in the repository. default is repository root
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    #[serde(rename = "ref", skip_serializing_if = "Option::is_none")]
    pub _ref: Option<Box<crate::models::GitReference>>,
    /// URL to the repository. Can be HTTP(s) (e.g. https://example.com/myrepo) or SSH (e.g. git://example.com[:port]/path/to/repo.git/) +kubebuilder:validation:MinLength=1
    #[serde(rename = "remote", skip_serializing_if = "Option::is_none")]
    pub remote: Option<String>,
}

impl GitSource {
    pub fn new() -> GitSource {
        GitSource {
            credentials: None,
            path: None,
            _ref: None,
            remote: None,
        }
    }
}


