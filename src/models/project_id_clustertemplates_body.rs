/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProjectIdClustertemplatesBody {
    #[serde(rename = "applications", skip_serializing_if = "Option::is_none")]
    pub applications: Option<Vec<crate::models::Application>>,
    #[serde(rename = "cluster", skip_serializing_if = "Option::is_none")]
    pub cluster: Option<Box<crate::models::Cluster>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "nodeDeployment", skip_serializing_if = "Option::is_none")]
    pub node_deployment: Option<Box<crate::models::NodeDeployment>>,
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<String>,
    #[serde(rename = "userSshKeys", skip_serializing_if = "Option::is_none")]
    pub user_ssh_keys: Option<Vec<crate::models::ClusterTemplateSshKey>>,
}

impl ProjectIdClustertemplatesBody {
    pub fn new() -> ProjectIdClustertemplatesBody {
        ProjectIdClustertemplatesBody {
            applications: None,
            cluster: None,
            name: None,
            node_deployment: None,
            scope: None,
            user_ssh_keys: None,
        }
    }
}


