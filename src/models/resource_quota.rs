/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ResourceQuota {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "quota", skip_serializing_if = "Option::is_none")]
    pub quota: Option<Box<crate::models::Quota>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::ResourceQuotaStatus>>,
    /// SubjectHumanReadableName contains the human-readable name for the subject(if applicable). Just filled as information in get/list.
    #[serde(rename = "subjectHumanReadableName", skip_serializing_if = "Option::is_none")]
    pub subject_human_readable_name: Option<String>,
    #[serde(rename = "subjectKind", skip_serializing_if = "Option::is_none")]
    pub subject_kind: Option<String>,
    #[serde(rename = "subjectName", skip_serializing_if = "Option::is_none")]
    pub subject_name: Option<String>,
}

impl ResourceQuota {
    pub fn new() -> ResourceQuota {
        ResourceQuota {
            name: None,
            quota: None,
            status: None,
            subject_human_readable_name: None,
            subject_kind: None,
            subject_name: None,
        }
    }
}


