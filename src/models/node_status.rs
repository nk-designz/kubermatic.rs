/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NodeStatus {
    /// different addresses of a node
    #[serde(rename = "addresses", skip_serializing_if = "Option::is_none")]
    pub addresses: Option<Vec<crate::models::NodeAddress>>,
    #[serde(rename = "allocatable", skip_serializing_if = "Option::is_none")]
    pub allocatable: Option<Box<crate::models::NodeResources>>,
    #[serde(rename = "capacity", skip_serializing_if = "Option::is_none")]
    pub capacity: Option<Box<crate::models::NodeResources>>,
    /// in case of a error this will contain a detailed error explanation
    #[serde(rename = "errorMessage", skip_serializing_if = "Option::is_none")]
    pub error_message: Option<String>,
    /// in case of a error this will contain a short error message
    #[serde(rename = "errorReason", skip_serializing_if = "Option::is_none")]
    pub error_reason: Option<String>,
    /// name of the actual Machine object
    #[serde(rename = "machineName", skip_serializing_if = "Option::is_none")]
    pub machine_name: Option<String>,
    #[serde(rename = "nodeInfo", skip_serializing_if = "Option::is_none")]
    pub node_info: Option<Box<crate::models::NodeSystemInfo>>,
}

impl NodeStatus {
    pub fn new() -> NodeStatus {
        NodeStatus {
            addresses: None,
            allocatable: None,
            capacity: None,
            error_message: None,
            error_reason: None,
            machine_name: None,
            node_info: None,
        }
    }
}


