/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VSphere {
    #[serde(rename = "datacenter", skip_serializing_if = "Option::is_none")]
    pub datacenter: Option<String>,
    #[serde(rename = "datastore", skip_serializing_if = "Option::is_none")]
    pub datastore: Option<String>,
    #[serde(rename = "datastoreCluster", skip_serializing_if = "Option::is_none")]
    pub datastore_cluster: Option<String>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    #[serde(rename = "resourcePool", skip_serializing_if = "Option::is_none")]
    pub resource_pool: Option<String>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "vmNetName", skip_serializing_if = "Option::is_none")]
    pub vm_net_name: Option<String>,
}

impl VSphere {
    pub fn new() -> VSphere {
        VSphere {
            datacenter: None,
            datastore: None,
            datastore_cluster: None,
            enabled: None,
            password: None,
            resource_pool: None,
            username: None,
            vm_net_name: None,
        }
    }
}


