/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GcpSubnetwork {
    #[serde(rename = "gatewayAddress", skip_serializing_if = "Option::is_none")]
    pub gateway_address: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "ipCidrRange", skip_serializing_if = "Option::is_none")]
    pub ip_cidr_range: Option<String>,
    /// +kubebuilder:validation:Enum=\"\";IPv4;IPv4+IPv6
    #[serde(rename = "ipFamily", skip_serializing_if = "Option::is_none")]
    pub ip_family: Option<String>,
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<String>,
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    #[serde(rename = "privateIpGoogleAccess", skip_serializing_if = "Option::is_none")]
    pub private_ip_google_access: Option<bool>,
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    #[serde(rename = "selfLink", skip_serializing_if = "Option::is_none")]
    pub self_link: Option<String>,
}

impl GcpSubnetwork {
    pub fn new() -> GcpSubnetwork {
        GcpSubnetwork {
            gateway_address: None,
            id: None,
            ip_cidr_range: None,
            ip_family: None,
            kind: None,
            name: None,
            network: None,
            path: None,
            private_ip_google_access: None,
            region: None,
            self_link: None,
        }
    }
}


