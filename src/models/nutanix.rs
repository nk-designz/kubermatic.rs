/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Nutanix {
    /// ClusterName is the Nutanix cluster to deploy resources and nodes to.
    #[serde(rename = "clusterName", skip_serializing_if = "Option::is_none")]
    pub cluster_name: Option<String>,
    /// CSIEndpoint to access Nutanix Prism Element for csi driver
    #[serde(rename = "csiEndpoint", skip_serializing_if = "Option::is_none")]
    pub csi_endpoint: Option<String>,
    /// Prism Element Password for csi driver
    #[serde(rename = "csiPassword", skip_serializing_if = "Option::is_none")]
    pub csi_password: Option<String>,
    /// CSIPort to use when connecting to the Nutanix Prism Element endpoint (defaults to 9440)
    #[serde(rename = "csiPort", skip_serializing_if = "Option::is_none")]
    pub csi_port: Option<i32>,
    /// Prism Element Username for csi driver
    #[serde(rename = "csiUsername", skip_serializing_if = "Option::is_none")]
    pub csi_username: Option<String>,
    #[serde(rename = "datacenter", skip_serializing_if = "Option::is_none")]
    pub datacenter: Option<String>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// Password is the password corresponding to the provided user.
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// ProjectName is the optional Nutanix project to use. If none is given, no project will be used.
    #[serde(rename = "projectName", skip_serializing_if = "Option::is_none")]
    pub project_name: Option<String>,
    /// ProxyURL is used to optionally configure a HTTP proxy to access Nutanix Prism Central.
    #[serde(rename = "proxyURL", skip_serializing_if = "Option::is_none")]
    pub proxy_url: Option<String>,
    /// Username is the username to access the Nutanix Prism Central API.
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
}

impl Nutanix {
    pub fn new() -> Nutanix {
        Nutanix {
            cluster_name: None,
            csi_endpoint: None,
            csi_password: None,
            csi_port: None,
            csi_username: None,
            datacenter: None,
            enabled: None,
            password: None,
            project_name: None,
            proxy_url: None,
            username: None,
        }
    }
}


