/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AwsSubnet {
    #[serde(rename = "availability_zone", skip_serializing_if = "Option::is_none")]
    pub availability_zone: Option<String>,
    #[serde(rename = "availability_zone_id", skip_serializing_if = "Option::is_none")]
    pub availability_zone_id: Option<String>,
    #[serde(rename = "available_ip_address_count", skip_serializing_if = "Option::is_none")]
    pub available_ip_address_count: Option<i64>,
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<bool>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "ipv4cidr", skip_serializing_if = "Option::is_none")]
    pub ipv4cidr: Option<String>,
    #[serde(rename = "ipv6cidr", skip_serializing_if = "Option::is_none")]
    pub ipv6cidr: Option<String>,
    #[serde(rename = "isDefaultSubnet", skip_serializing_if = "Option::is_none")]
    pub is_default_subnet: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::AwsTag>>,
}

impl AwsSubnet {
    pub fn new() -> AwsSubnet {
        AwsSubnet {
            availability_zone: None,
            availability_zone_id: None,
            available_ip_address_count: None,
            default: None,
            id: None,
            ipv4cidr: None,
            ipv6cidr: None,
            is_default_subnet: None,
            name: None,
            state: None,
            tags: None,
        }
    }
}


