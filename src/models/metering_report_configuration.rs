/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MeteringReportConfiguration : MeteringReportConfiguration holds report configuration



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MeteringReportConfiguration {
    /// Interval defines the number of days consulted in the metering report.
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<i32>,
    /// Retention defines a number of days after which reports are queued for removal. If not set, reports are kept forever. Please note that this functionality works only for object storage that supports an object lifecycle management mechanism.
    #[serde(rename = "retention", skip_serializing_if = "Option::is_none")]
    pub retention: Option<i32>,
    /// Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron. Please take a note that Schedule is responsible only for setting the time when a report generation mechanism kicks off. The Interval MUST be set independently.
    #[serde(rename = "schedule", skip_serializing_if = "Option::is_none")]
    pub schedule: Option<String>,
    /// Types of reports to generate. Available report types are cluster and namespace. By default, all types of reports are generated.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Vec<String>>,
}

impl MeteringReportConfiguration {
    /// MeteringReportConfiguration holds report configuration
    pub fn new() -> MeteringReportConfiguration {
        MeteringReportConfiguration {
            interval: None,
            retention: None,
            schedule: None,
            _type: None,
        }
    }
}


