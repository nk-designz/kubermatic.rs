/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NamespaceSpec {
    /// Annotations of the namespace More info: http://kubernetes.io/docs/user-guide/annotations +optional
    #[serde(rename = "annotations", skip_serializing_if = "Option::is_none")]
    pub annotations: Option<::std::collections::HashMap<String, String>>,
    /// Create defines whether the namespace should be created if it does not exist. Defaults to true
    #[serde(rename = "create", skip_serializing_if = "Option::is_none")]
    pub create: Option<bool>,
    /// Labels of the namespace More info: http://kubernetes.io/docs/user-guide/labels +optional
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<::std::collections::HashMap<String, String>>,
    /// Name is the namespace to deploy the Application into. Should be a valid lowercase RFC1123 domain name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl NamespaceSpec {
    pub fn new() -> NamespaceSpec {
        NamespaceSpec {
            annotations: None,
            create: None,
            labels: None,
            name: None,
        }
    }
}


