/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Cluster : Note: Cluster has a custom MarshalJSON method defined and thus the output may vary



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Cluster {
    /// Annotations that can be added to the resource
    #[serde(rename = "annotations", skip_serializing_if = "Option::is_none")]
    pub annotations: Option<::std::collections::HashMap<String, String>>,
    /// CreationTimestamp is a timestamp representing the server time when this object was created.
    #[serde(rename = "creationTimestamp", skip_serializing_if = "Option::is_none")]
    pub creation_timestamp: Option<String>,
    #[serde(rename = "credential", skip_serializing_if = "Option::is_none")]
    pub credential: Option<String>,
    /// DeletionTimestamp is a timestamp representing the server time when this object was deleted.
    #[serde(rename = "deletionTimestamp", skip_serializing_if = "Option::is_none")]
    pub deletion_timestamp: Option<String>,
    /// ID unique value that identifies the resource generated by the server. Read-Only.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "inheritedLabels", skip_serializing_if = "Option::is_none")]
    pub inherited_labels: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "machineDeploymentCount", skip_serializing_if = "Option::is_none")]
    pub machine_deployment_count: Option<i64>,
    /// Name represents human readable name for the resource
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "spec", skip_serializing_if = "Option::is_none")]
    pub spec: Option<Box<crate::models::ClusterSpec>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::ClusterStatus>>,
    /// Type is deprecated and not used anymore.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
}

impl Cluster {
    /// Note: Cluster has a custom MarshalJSON method defined and thus the output may vary
    pub fn new() -> Cluster {
        Cluster {
            annotations: None,
            creation_timestamp: None,
            credential: None,
            deletion_timestamp: None,
            id: None,
            inherited_labels: None,
            labels: None,
            machine_deployment_count: None,
            name: None,
            spec: None,
            status: None,
            _type: None,
        }
    }
}


