/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IpamPoolDatacenterSettings {
    #[serde(rename = "allocationPrefix", skip_serializing_if = "Option::is_none")]
    pub allocation_prefix: Option<i64>,
    #[serde(rename = "allocationRange", skip_serializing_if = "Option::is_none")]
    pub allocation_range: Option<i64>,
    /// SubnetCIDR is used to store IPv4/IPv6 CIDR.
    #[serde(rename = "poolCidr", skip_serializing_if = "Option::is_none")]
    pub pool_cidr: Option<String>,
    /// +kubebuilder:validation:Enum=prefix;range IPAMPoolAllocationType defines the type of allocation to be used. Possible values are `prefix` and `range`.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
}

impl IpamPoolDatacenterSettings {
    pub fn new() -> IpamPoolDatacenterSettings {
        IpamPoolDatacenterSettings {
            allocation_prefix: None,
            allocation_range: None,
            pool_cidr: None,
            _type: None,
        }
    }
}


