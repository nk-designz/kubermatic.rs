/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GkeNodePoolAutoscaling : GKENodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GkeNodePoolAutoscaling {
    /// Autoprovisioned: Can this node pool be deleted automatically.
    #[serde(rename = "autoprovisioned", skip_serializing_if = "Option::is_none")]
    pub autoprovisioned: Option<bool>,
    /// Enabled: Is autoscaling enabled for this node pool.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// MaxNodeCount: Maximum number of nodes in the NodePool. Must be >= min_node_count. There has to enough quota to scale up the cluster.
    #[serde(rename = "maxNodeCount", skip_serializing_if = "Option::is_none")]
    pub max_node_count: Option<i64>,
    /// MinNodeCount: Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
    #[serde(rename = "minNodeCount", skip_serializing_if = "Option::is_none")]
    pub min_node_count: Option<i64>,
}

impl GkeNodePoolAutoscaling {
    /// GKENodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
    pub fn new() -> GkeNodePoolAutoscaling {
        GkeNodePoolAutoscaling {
            autoprovisioned: None,
            enabled: None,
            max_node_count: None,
            min_node_count: None,
        }
    }
}


