/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EtcdBackupConfigSpec : EtcdBackupConfigSpec represents an object holding the etcd backup configuration specification



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EtcdBackupConfigSpec {
    /// ClusterID is the id of the cluster which will be backed up
    #[serde(rename = "clusterId", skip_serializing_if = "Option::is_none")]
    pub cluster_id: Option<String>,
    /// Destination indicates where the backup will be stored. The destination name should correspond to a destination in the cluster's Seed.Spec.EtcdBackupRestore.
    #[serde(rename = "destination", skip_serializing_if = "Option::is_none")]
    pub destination: Option<String>,
    /// Keep is the number of backups to keep around before deleting the oldest one If not set, defaults to DefaultKeptBackupsCount. Only used if Schedule is set.
    #[serde(rename = "keep", skip_serializing_if = "Option::is_none")]
    pub keep: Option<i64>,
    /// Schedule is a cron expression defining when to perform the backup. If not set, the backup is performed exactly once, immediately.
    #[serde(rename = "schedule", skip_serializing_if = "Option::is_none")]
    pub schedule: Option<String>,
}

impl EtcdBackupConfigSpec {
    /// EtcdBackupConfigSpec represents an object holding the etcd backup configuration specification
    pub fn new() -> EtcdBackupConfigSpec {
        EtcdBackupConfigSpec {
            cluster_id: None,
            destination: None,
            keep: None,
            schedule: None,
        }
    }
}


