/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GcpCloudSpec {
    #[serde(rename = "credentialsReference", skip_serializing_if = "Option::is_none")]
    pub credentials_reference: Option<Box<crate::models::GlobalObjectKeySelector>>,
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<String>,
    /// A CIDR range that will be used to allow access to the node port range in the firewall rules to. If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges is set, the node port range can be accessed from anywhere.
    #[serde(rename = "nodePortsAllowedIPRange", skip_serializing_if = "Option::is_none")]
    pub node_ports_allowed_ip_range: Option<String>,
    #[serde(rename = "nodePortsAllowedIPRanges", skip_serializing_if = "Option::is_none")]
    pub node_ports_allowed_ip_ranges: Option<Box<crate::models::NetworkRanges>>,
    /// The Google Service Account (JSON format), encoded with base64.
    #[serde(rename = "serviceAccount", skip_serializing_if = "Option::is_none")]
    pub service_account: Option<String>,
    #[serde(rename = "subnetwork", skip_serializing_if = "Option::is_none")]
    pub subnetwork: Option<String>,
}

impl GcpCloudSpec {
    pub fn new() -> GcpCloudSpec {
        GcpCloudSpec {
            credentials_reference: None,
            network: None,
            node_ports_allowed_ip_range: None,
            node_ports_allowed_ip_ranges: None,
            service_account: None,
            subnetwork: None,
        }
    }
}


