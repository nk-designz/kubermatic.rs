/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DatacenterSpecOpenstack {
    #[serde(rename = "authURL", skip_serializing_if = "Option::is_none")]
    pub auth_url: Option<String>,
    #[serde(rename = "availabilityZone", skip_serializing_if = "Option::is_none")]
    pub availability_zone: Option<String>,
    /// Used for automatic network creation
    #[serde(rename = "dnsServers", skip_serializing_if = "Option::is_none")]
    pub dns_servers: Option<Vec<String>>,
    /// Optional: List of enabled flavors for the given datacenter
    #[serde(rename = "enabledFlavors", skip_serializing_if = "Option::is_none")]
    pub enabled_flavors: Option<Vec<String>>,
    /// Optional
    #[serde(rename = "enforceFloatingIP", skip_serializing_if = "Option::is_none")]
    pub enforce_floating_ip: Option<bool>,
    /// Optional
    #[serde(rename = "ignoreVolumeAZ", skip_serializing_if = "Option::is_none")]
    pub ignore_volume_az: Option<bool>,
    #[serde(rename = "images", skip_serializing_if = "Option::is_none")]
    pub images: Option<crate::models::ImageList>,
    /// Optional: defines if the IPv6 is enabled for the datacenter
    #[serde(rename = "ipv6Enabled", skip_serializing_if = "Option::is_none")]
    pub ipv6_enabled: Option<bool>,
    /// Optional: Gets mapped to the \"manage-security-groups\" setting in the cloud config. See https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/#load-balancer This setting defaults to true.
    #[serde(rename = "manageSecurityGroups", skip_serializing_if = "Option::is_none")]
    pub manage_security_groups: Option<bool>,
    #[serde(rename = "nodeSizeRequirements", skip_serializing_if = "Option::is_none")]
    pub node_size_requirements: Option<Box<crate::models::OpenstackNodeSizeRequirements>>,
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// Optional: Gets mapped to the \"trust-device-path\" setting in the cloud config. See https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/#block-storage This setting defaults to false.
    #[serde(rename = "trustDevicePath", skip_serializing_if = "Option::is_none")]
    pub trust_device_path: Option<bool>,
    /// Optional: Gets mapped to the \"use-octavia\" setting in the cloud config. use-octavia is enabled by default in CCM since v1.17.0, and disabled by default with the in-tree cloud provider.
    #[serde(rename = "useOctavia", skip_serializing_if = "Option::is_none")]
    pub use_octavia: Option<bool>,
}

impl DatacenterSpecOpenstack {
    pub fn new() -> DatacenterSpecOpenstack {
        DatacenterSpecOpenstack {
            auth_url: None,
            availability_zone: None,
            dns_servers: None,
            enabled_flavors: None,
            enforce_floating_ip: None,
            ignore_volume_az: None,
            images: None,
            ipv6_enabled: None,
            manage_security_groups: None,
            node_size_requirements: None,
            region: None,
            trust_device_path: None,
            use_octavia: None,
        }
    }
}


