/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AddonConfigSpec {
    /// Description of the configured addon, it will be displayed in the addon overview in the UI
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Controls that can be set for configured addon
    #[serde(rename = "formSpec", skip_serializing_if = "Option::is_none")]
    pub form_spec: Option<Vec<crate::models::AddonFormControl>>,
    /// Logo of the configured addon, encoded in base64
    #[serde(rename = "logo", skip_serializing_if = "Option::is_none")]
    pub logo: Option<String>,
    /// LogoFormat contains logo format of the configured addon, i.e. svg+xml
    #[serde(rename = "logoFormat", skip_serializing_if = "Option::is_none")]
    pub logo_format: Option<String>,
    /// ShortDescription of the configured addon that contains more detailed information about the addon, it will be displayed in the addon details view in the UI
    #[serde(rename = "shortDescription", skip_serializing_if = "Option::is_none")]
    pub short_description: Option<String>,
}

impl AddonConfigSpec {
    pub fn new() -> AddonConfigSpec {
        AddonConfigSpec {
            description: None,
            form_spec: None,
            logo: None,
            logo_format: None,
            short_description: None,
        }
    }
}


