/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VSphereCloudSpec {
    #[serde(rename = "credentialsReference", skip_serializing_if = "Option::is_none")]
    pub credentials_reference: Option<Box<crate::models::GlobalObjectKeySelector>>,
    /// Datastore to be used for storing virtual machines and as a default for dynamic volume provisioning, it is mutually exclusive with DatastoreCluster. +optional
    #[serde(rename = "datastore", skip_serializing_if = "Option::is_none")]
    pub datastore: Option<String>,
    /// DatastoreCluster to be used for storing virtual machines, it is mutually exclusive with Datastore. +optional
    #[serde(rename = "datastoreCluster", skip_serializing_if = "Option::is_none")]
    pub datastore_cluster: Option<String>,
    /// Folder is the folder to be used to group the provisioned virtual machines. +optional
    #[serde(rename = "folder", skip_serializing_if = "Option::is_none")]
    pub folder: Option<String>,
    #[serde(rename = "infraManagementUser", skip_serializing_if = "Option::is_none")]
    pub infra_management_user: Option<Box<crate::models::VSphereCredentials>>,
    /// Password is the vSphere user password. +optional
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// ResourcePool is used to manage resources such as cpu and memory for vSphere virtual machines. The resource pool should be defined on vSphere cluster level. +optional
    #[serde(rename = "resourcePool", skip_serializing_if = "Option::is_none")]
    pub resource_pool: Option<String>,
    /// StoragePolicy to be used for storage provisioning
    #[serde(rename = "storagePolicy", skip_serializing_if = "Option::is_none")]
    pub storage_policy: Option<String>,
    /// This is category for the machine deployment tags
    #[serde(rename = "tagCategoryID", skip_serializing_if = "Option::is_none")]
    pub tag_category_id: Option<String>,
    /// Username is the vSphere user name. +optional
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// VMNetName is the name of the vSphere network.
    #[serde(rename = "vmNetName", skip_serializing_if = "Option::is_none")]
    pub vm_net_name: Option<String>,
}

impl VSphereCloudSpec {
    pub fn new() -> VSphereCloudSpec {
        VSphereCloudSpec {
            credentials_reference: None,
            datastore: None,
            datastore_cluster: None,
            folder: None,
            infra_management_user: None,
            password: None,
            resource_pool: None,
            storage_policy: None,
            tag_category_id: None,
            username: None,
            vm_net_name: None,
        }
    }
}


