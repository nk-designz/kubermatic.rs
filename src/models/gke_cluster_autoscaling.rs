/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GkeClusterAutoscaling : GKEClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GkeClusterAutoscaling {
    /// AutoprovisioningLocations: The list of Google Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.
    #[serde(rename = "autoprovisioningLocations", skip_serializing_if = "Option::is_none")]
    pub autoprovisioning_locations: Option<Vec<String>>,
    #[serde(rename = "autoprovisioningNodePoolDefaults", skip_serializing_if = "Option::is_none")]
    pub autoprovisioning_node_pool_defaults: Option<Box<crate::models::GkeAutoprovisioningNodePoolDefaults>>,
    /// EnableNodeAutoprovisioning: Enables automatic node pool creation and deletion.
    #[serde(rename = "enableNodeAutoprovisioning", skip_serializing_if = "Option::is_none")]
    pub enable_node_autoprovisioning: Option<bool>,
    /// ResourceLimits: Contains global constraints regarding minimum and maximum amount of resources in the cluster.
    #[serde(rename = "resourceLimits", skip_serializing_if = "Option::is_none")]
    pub resource_limits: Option<Vec<crate::models::GkeResourceLimit>>,
}

impl GkeClusterAutoscaling {
    /// GKEClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
    pub fn new() -> GkeClusterAutoscaling {
        GkeClusterAutoscaling {
            autoprovisioning_locations: None,
            autoprovisioning_node_pool_defaults: None,
            enable_node_autoprovisioning: None,
            resource_limits: None,
        }
    }
}


