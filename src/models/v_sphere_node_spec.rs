/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// VSphereNodeSpec : VSphereNodeSpec VSphere node settings



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VSphereNodeSpec {
    #[serde(rename = "cpus", skip_serializing_if = "Option::is_none")]
    pub cpus: Option<i64>,
    #[serde(rename = "diskSizeGB", skip_serializing_if = "Option::is_none")]
    pub disk_size_gb: Option<i64>,
    #[serde(rename = "memory", skip_serializing_if = "Option::is_none")]
    pub memory: Option<i64>,
    /// Additional metadata to set
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::VSphereTag>>,
    #[serde(rename = "template", skip_serializing_if = "Option::is_none")]
    pub template: Option<String>,
}

impl VSphereNodeSpec {
    /// VSphereNodeSpec VSphere node settings
    pub fn new() -> VSphereNodeSpec {
        VSphereNodeSpec {
            cpus: None,
            disk_size_gb: None,
            memory: None,
            tags: None,
            template: None,
        }
    }
}


