/*
 * Kubermatic Kubernetes Platform API
 *
 * This spec describes possible operations which can be made against the Kubermatic Kubernetes Platform API.
 *
 * The version of the OpenAPI document: 2.21
 * 
 * Generated by: https://openapi-generator.tech
 */

/// NodesMetric : NodesMetric defines a metric for a group of nodes



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NodesMetric {
    #[serde(rename = "cpuAvailableMillicores", skip_serializing_if = "Option::is_none")]
    pub cpu_available_millicores: Option<i64>,
    /// CPUTotalMillicores in m cores
    #[serde(rename = "cpuTotalMillicores", skip_serializing_if = "Option::is_none")]
    pub cpu_total_millicores: Option<i64>,
    /// CPUUsedPercentage in percentage
    #[serde(rename = "cpuUsedPercentage", skip_serializing_if = "Option::is_none")]
    pub cpu_used_percentage: Option<i64>,
    /// MemoryAvailableBytes available memory for node
    #[serde(rename = "memoryAvailableBytes", skip_serializing_if = "Option::is_none")]
    pub memory_available_bytes: Option<i64>,
    /// MemoryTotalBytes current memory usage in bytes
    #[serde(rename = "memoryTotalBytes", skip_serializing_if = "Option::is_none")]
    pub memory_total_bytes: Option<i64>,
    /// MemoryUsedPercentage in percentage
    #[serde(rename = "memoryUsedPercentage", skip_serializing_if = "Option::is_none")]
    pub memory_used_percentage: Option<i64>,
}

impl NodesMetric {
    /// NodesMetric defines a metric for a group of nodes
    pub fn new() -> NodesMetric {
        NodesMetric {
            cpu_available_millicores: None,
            cpu_total_millicores: None,
            cpu_used_percentage: None,
            memory_available_bytes: None,
            memory_total_bytes: None,
            memory_used_percentage: None,
        }
    }
}


